{"version":3,"file":"src_app_todos_todos_module_ts.js","mappings":"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","sources":["./src/app/tasks/components/task/task.component.ts","./src/app/tasks/components/task/task.component.html","./src/app/tasks/components/tasks/tasks.component.ts","./src/app/tasks/components/tasks/tasks.component.html","./src/app/tasks/models/tasks.models.ts","./src/app/tasks/services/tasks.service.ts","./src/app/tasks/tasks.module.ts","./src/app/todos/components/todo/todo.component.ts","./src/app/todos/components/todo/todo.component.html","./src/app/todos/components/todos/todos.component.html","./src/app/todos/components/todos/todos.component.ts","./src/app/todos/services/todos.service.ts","./src/app/todos/todos-routing.module.ts","./src/app/todos/todos.module.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core'\nimport { Task, TaskStatuses } from '../../models/tasks.models'\nimport { TasksService } from '../../services/tasks.service'\n\n@Component({\n  selector: 'tdl-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  constructor(private tasksService: TasksService) {}\n\n  @Input() task!: Task\n  taskComplited: boolean = false\n\n  deleteTask() {\n    this.tasksService.deleteTask(this.task.todoListId, this.task.id)\n  }\n\n  changeTaskTitle(newTitle: string) {\n    this.tasksService.updateTaskTitle(this.task.todoListId, this.task.id, newTitle)\n  }\n\n  changeTaskStatus() {\n    event?.preventDefault()\n    const newStatus = this.task.status === TaskStatuses.New ? TaskStatuses.Complited : TaskStatuses.New\n    console.log('change status')\n    this.tasksService.updateTaskStatus(this.task.todoListId, this.task.id, newStatus)\n  }\n\n  ngOnInit(): void {\n    this.taskComplited = this.task.status === TaskStatuses.Complited\n  }\n}\n","<input type=\"checkbox\" [checked]=\"taskComplited\" (click)=\"changeTaskStatus()\" />\n<tdl-editable-name [name]=\"task.title\" (changeName)=\"changeTaskTitle($event)\"></tdl-editable-name>\n{{ task.completed }}\n{{ task.order }}\n<button (click)=\"deleteTask()\">x</button>\n","import { Component, Input, OnInit } from '@angular/core'\nimport { map, Observable } from 'rxjs'\nimport { Task } from '../../models/tasks.models'\nimport { TasksService } from '../../services/tasks.service'\n\n@Component({\n  selector: 'tdl-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\nexport class TasksComponent implements OnInit {\n  constructor(private tasksService: TasksService) {\n    this.tasks$ = this.tasksService.tasks$\n    this.tasksById$ = this.tasksService.tasks$.pipe(map(res => res[this.todoId]))\n  }\n\n  //как вытаскивать таски\n  tasks$: Observable<{ [key: string]: Task[] }>\n  tasksById$: Observable<Task[]>\n\n  @Input() todoId!: string\n\n  changeTaskTitle(newTitle: string, taskId: string) {\n    this.tasksService.updateTaskTitle(this.todoId, taskId, newTitle)\n  }\n\n  deleteTask(taskId: string) {\n    this.tasksService.deleteTask(this.todoId, taskId)\n  }\n\n  createNewTask(taskTitle: string) {\n    this.tasksService.createTask(this.todoId, taskTitle)\n  }\n\n  ngOnInit(): void {\n    this.tasksService.getTasks(this.todoId)\n    console.log('task')\n  }\n}\n","<div class=\"taskContainer\">\n  <tdl-add-item placeholder=\"add task name\" (addItem)=\"createNewTask($event)\"></tdl-add-item>\n  <div class=\"task\" *ngFor=\"let task of tasksById$ | async\">\n    <tdl-task [task]=\"task\"></tdl-task>\n  </div>\n</div>\n","export interface Task {\n  id: string\n  title: string\n  description: string\n  todoListId: string\n  order: number\n  status: TaskStatuses\n  priority: TaskPriorities\n  startDate: string\n  deadline: string\n  addedDate: string\n  completed: boolean // может не быть\n}\n\nexport interface GetTasksResponce {\n  items: Task[]\n  totalCount: number\n  error: string\n}\n\nexport interface TasksResponce<T = { item: Task }> {\n  // Post and put and delete\n  data: T\n  resultCode: number //   (0 if opearation completed successfullt, other numbers - some error occured)\n  messages: string[] //  is empty if resultCode is 0, contains error messages if resultCode is different from 0\n}\n\nexport enum TaskStatuses {\n  New,\n  InProgress,\n  Complited,\n  Draft,\n}\n\nexport enum TaskPriorities {\n  Low,\n  Middle,\n  Hi,\n  Urgently,\n  Later,\n}\n\nexport interface UpdateTaskModel {\n  title: string\n  description: string\n  status: TaskStatuses\n  priority: TaskPriorities\n  startDate: string\n  deadline: string\n}\n","import { Injectable } from '@angular/core'\nimport { BehaviorSubject, catchError, EMPTY, map } from 'rxjs'\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { BeatyLoggerService } from '../../core/services/beaty-logger.service'\nimport { environment } from '../../../environments/environment'\nimport { GetTasksResponce, Task, TasksResponce, TaskStatuses, UpdateTaskModel } from '../models/tasks.models'\n\n@Injectable()\nexport class TasksService {\n  constructor(private http: HttpClient, private beatyLoggerService: BeatyLoggerService) {}\n\n  tasks$: BehaviorSubject<{ [key: string]: Task[] }> = new BehaviorSubject<{ [key: string]: Task[] }>({})\n\n  // tasksByTodoId$: BehaviorSubject<Task[]> = new BehaviorSubject<Task[]>([])\n\n  private errorHandler(err: HttpErrorResponse) {\n    this.beatyLoggerService.log(err.message, 'error')\n    return EMPTY\n  }\n\n  getTasks(todoId: string) {\n    this.http\n      .get<GetTasksResponce>(`${environment.baseURL}/todo-lists/${todoId}/tasks`)\n      .pipe(catchError(this.errorHandler.bind(this)))\n      .subscribe(res => {\n        this.tasks$.next({ ...this.tasks$.getValue(), [todoId]: res.items })\n      })\n  }\n\n  createTask(todoId: string, title: string) {\n    this.http\n      .post<TasksResponce>(`${environment.baseURL}/todo-lists/${todoId}/tasks`, { title })\n      .pipe(\n        catchError(this.errorHandler.bind(this)),\n        map(res => {\n          const newTask = res.data.item\n          const stateTasks = this.tasks$.getValue()\n          stateTasks[todoId].unshift(newTask)\n          return stateTasks\n        })\n      )\n      .subscribe(tasks => {\n        this.tasks$.next(tasks)\n      })\n  }\n\n  deleteTask(todoId: string, taskId: string) {\n    return this.http\n      .delete<TasksResponce<{}>>(`${environment.baseURL}/todo-lists/${todoId}/tasks/${taskId}`)\n      .pipe(\n        catchError(this.errorHandler.bind(this)),\n        map(() => {\n          const stateTask = this.tasks$.getValue()\n          stateTask[todoId] = stateTask[todoId].filter(task => task.id !== taskId)\n          return stateTask\n        })\n      )\n      .subscribe(tasks => {\n        this.tasks$.next(tasks)\n      })\n  }\n\n  updateTaskTitle(todoId: string, taskId: string, title: string) {\n    const oldTask = this.tasks$.getValue()[todoId].find(task => task.id === taskId)\n    const newTask = { ...this._createUpdateTaskModel(oldTask, 'title', title) }\n    return this._updateTask(todoId, taskId, newTask)\n  }\n\n  updateTaskStatus(todoId: string, taskId: string, status: TaskStatuses) {\n    const oldTask = this.tasks$.getValue()[todoId].find(task => task.id === taskId)\n    const newTask = { ...this._createUpdateTaskModel(oldTask, 'status', status) }\n    return this._updateTask(todoId, taskId, newTask)\n  }\n\n  _updateTask(todoId: string, taskId: string, newTask: UpdateTaskModel) {\n    const stateTasks = this.tasks$.getValue()\n    return this.http\n      .put<TasksResponce>(`${environment.baseURL}/todo-lists/${todoId}/tasks/${taskId}`, newTask)\n      .pipe(\n        catchError(this.errorHandler.bind(this)),\n        map(res => {\n          return stateTasks[todoId].map(task => (task.id === taskId ? res.data.item : task))\n        })\n      )\n      .subscribe(tasks => {\n        this.tasks$.next({ ...stateTasks, [todoId]: [...tasks] })\n      })\n  }\n\n  _createUpdateTaskModel(task: Task = {} as Task, key: keyof UpdateTaskModel, value: any): UpdateTaskModel {\n    const taskModel: UpdateTaskModel = {\n      title: task.title,\n      status: task.status,\n      deadline: task.deadline,\n      description: task.description,\n      priority: task.priority,\n      startDate: task.startDate,\n      [key]: value,\n    }\n    return taskModel\n  }\n\n  //  костыль как заменить\n  createUpdateTaskModel(task: Task = {} as Task): UpdateTaskModel {\n    const taskModel: UpdateTaskModel = {\n      title: task.title && ' ',\n      status: task.status,\n      deadline: task.deadline,\n      description: task.description,\n      priority: task.priority,\n      startDate: task.startDate,\n    }\n    return taskModel\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TasksComponent } from './components/tasks/tasks.component'\nimport { TasksService } from './services/tasks.service'\nimport { SharedModule } from '../shared/shared.module'\nimport { TaskComponent } from './components/task/task.component'\n\n@NgModule({\n  declarations: [TasksComponent, TaskComponent],\n  imports: [CommonModule, SharedModule],\n  providers: [TasksService],\n  exports: [TasksComponent],\n  // exports: [TasksComponent],\n})\nexport class TasksModule {}\n","import { Component, Input, OnInit } from '@angular/core'\nimport { TodoList } from '../../models/todos.models'\nimport { TodosService } from '../../services/todos.service'\n\n@Component({\n  selector: 'tdl-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  constructor(private todosService: TodosService) {}\n\n  @Input() todo!: TodoList\n  newTitle = ''\n\n  getNewTitle(newTitle: string) {\n    this.newTitle = newTitle\n    this.updateTodosTitle()\n  }\n\n  deleteTodo() {\n    this.todosService.deleteTodos(this.todo.id)\n  }\n\n  updateTodosTitle() {\n    console.log('update title')\n    this.todosService.updateTodosTitle(this.todo.id, this.newTitle)\n  }\n\n  ngOnInit(): void {\n    console.log('td')\n  }\n}\n","<div class=\"title\">\n  <tdl-editable-name [name]=\"todo.title\" (changeName)=\"getNewTitle($event)\"></tdl-editable-name>\n  <button class=\"buttonDel\" (click)=\"deleteTodo()\">x</button>\n</div>\n<tdl-tasks [todoId]=\"todo.id\"></tdl-tasks>\n","<h1 *ngIf=\"!!error; else content\">{{ error }}</h1>\r\n\r\n<ng-template #content>\r\n  <tdl-add-item placeholder=\"create new ToDo\" (addItem)=\"createTodosHandler($event)\"></tdl-add-item>\r\n  <div class=\"todos\">\r\n    <div class=\"todo\" *ngFor=\"let todo of todos$ | async\">\r\n      <tdl-todo [todo]=\"todo\"></tdl-todo>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core'\r\nimport { TodosService } from '../../services/todos.service'\r\nimport { Observable } from 'rxjs'\r\nimport { TodoList } from 'src/app/todos/models/todos.models'\r\n\r\n@Component({\r\n  selector: 'tdl-todos',\r\n  templateUrl: './todos.component.html',\r\n  styleUrls: ['./todos.component.scss'],\r\n})\r\nexport class TodosComponent implements OnInit {\r\n  constructor(private todosService: TodosService) {\r\n    this.todos$ = this.todosService.todos$\r\n  }\r\n\r\n  todos$: Observable<TodoList[]>\r\n  error = ''\r\n\r\n  createTodosHandler(title: string) {\r\n    if (this.todosService.getTodosLength() < 10) {\r\n      console.log(this.todosService.getTodosLength())\r\n      console.log('create TODO with title: ' + title)\r\n      this.todosService.createTodos(title)\r\n    } else {\r\n      this.error = 'too many Todos'\r\n      setTimeout(() => {\r\n        this.error = ''\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  getTodos() {\r\n    this.todosService.getTodos()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('start todos')\r\n    this.getTodos()\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\r\nimport { BehaviorSubject, catchError, EMPTY, map } from 'rxjs'\r\nimport { environment } from '../../../environments/environment'\r\nimport { BeatyLoggerService } from '../../core/services/beaty-logger.service'\r\nimport { TodoList, TodoResponce } from '../models/todos.models'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TodosService {\r\n  constructor(private http: HttpClient, private beatyLoggerService: BeatyLoggerService) {}\r\n\r\n  todos$: BehaviorSubject<TodoList[]> = new BehaviorSubject<TodoList[]>([])\r\n\r\n  private errorHandler(err: HttpErrorResponse) {\r\n    this.beatyLoggerService.log(err.message, 'error')\r\n    return EMPTY\r\n  }\r\n\r\n  getTodosLength() {\r\n    return this.todos$.getValue().length\r\n  }\r\n\r\n  getTodos() {\r\n    this.http\r\n      .get<TodoList[]>(`${environment.baseURL}/todo-lists`)\r\n      .pipe(catchError(this.errorHandler.bind(this)))\r\n      .subscribe(todos => {\r\n        this.todos$.next(todos)\r\n      })\r\n  }\r\n\r\n  createTodos(title: string) {\r\n    this.http\r\n      .post<TodoResponce<{ item: TodoList }>>(`${environment.baseURL}/todo-lists`, { title })\r\n      .pipe(\r\n        catchError(this.errorHandler.bind(this)),\r\n        map(res => {\r\n          const newTodo = res.data.item\r\n          const stateTodos = this.todos$.getValue()\r\n          return [...stateTodos, newTodo]\r\n        })\r\n      )\r\n      .subscribe(todos => {\r\n        this.todos$.next(todos)\r\n      })\r\n  }\r\n\r\n  deleteTodos(deletedID: string) {\r\n    return this.http\r\n      .delete<TodoResponce>(`${environment.baseURL}/todo-lists/${deletedID}`)\r\n      .pipe(\r\n        catchError(this.errorHandler.bind(this)),\r\n        map(() => {\r\n          return this.todos$.getValue().filter(td => td.id !== deletedID)\r\n        })\r\n      )\r\n      .subscribe(todos => {\r\n        this.todos$.next(todos)\r\n      })\r\n  }\r\n\r\n  updateTodosTitle(todoId: string, title: string) {\r\n    return this.http\r\n      .put<TodoResponce>(`${environment.baseURL}/todo-lists/${todoId}`, { title })\r\n      .pipe(\r\n        catchError(this.errorHandler.bind(this)),\r\n        map(() => {\r\n          return this.todos$.getValue().map(td => (td.id === todoId ? { ...td, title: title } : td))\r\n        })\r\n      )\r\n      .subscribe(todos => {\r\n        this.todos$.next(todos)\r\n      })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { TodosComponent } from './components/todos/todos.component'\nimport { AuthGuard } from '../core/guards/auth.guard'\n\nconst routes: Routes = [{ path: '', component: TodosComponent, canActivate: [AuthGuard] }]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TodosRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { TodosRoutingModule } from './todos-routing.module'\nimport { TodosComponent } from './components/todos/todos.component'\nimport { TodoComponent } from './components/todo/todo.component'\nimport { SharedModule } from '../shared/shared.module'\nimport { TasksModule } from '../tasks/tasks.module'\n\n@NgModule({\n  declarations: [TodosComponent, TodoComponent],\n  imports: [CommonModule, TodosRoutingModule, SharedModule, TasksModule],\n})\nexport class TodosModule {}\n"],"names":["map","i0","TasksComponent","constructor","tasksService","tasks$","tasksById$","pipe","res","todoId","changeTaskTitle","newTitle","taskId","updateTaskTitle","deleteTask","createNewTask","taskTitle","createTask","ngOnInit","getTasks","console","log","selectors","inputs","decls","vars","consts","template","ctx","TodosComponent","todosService","todos$","createTodosHandler","title","getTodosLength","createTodos","error","setTimeout","getTodos"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}